name: Build and Publish Container

on:
  push:
    branches: ['main'] # Only trigger on main now
    paths:
      - 'Containerfile'
      - 'Containerfile.hci' # Or whatever you name your variant Containerfiles
      - 'rootfs/**'
  workflow_dispatch:
    inputs:
      variant:
        description: 'Variant to build (e.g., main, hci, or all)'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - hci
          - all
  schedule:
    - cron: '0 5 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # BRANCH env var might be less relevant or repurposed

jobs:
  # You might want separate build jobs per variant, or a matrix strategy

  build-main-metadata: # Example for a "main" or "common" variant
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # Default image
          tags: |
            type=raw,value=latest # Main variant is 'latest'
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr
            type=schedule,pattern={{date 'YYYYMMDD'}}

  build-hci-metadata: # Example for an "hci" variant
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # You might use the same image name and differentiate by tag
          tags: |
            type=raw,value=hci # Tag for the HCI variant
            type=sha,format=short,prefix=hci-
            type=schedule,pattern=hci-{{date 'YYYYMMDD'}}

  build-main: # Renamed from 'build' to be specific
    runs-on: ubuntu-24.04-arm
    needs: build-main-metadata
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile # Assumes this is for the main/common variant
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.build-main-metadata.outputs.tags }}
          labels: ${{ needs.build-main-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-hci: # New job for the HCI variant
    runs-on: ubuntu-24.04-arm
    needs: build-hci-metadata
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push HCI variant
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile.hci # Specific Containerfile for HCI
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.build-hci-metadata.outputs.tags }}
          labels: ${{ needs.build-hci-metadata.outputs.labels }}
          cache-from: type=gha,target=hci # May need separate cache targets
          cache-to: type=gha,mode=max,target=hci
