name: Build, ignite, and push qcow2 image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG: latest

jobs:
  hydrate-butane:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      ignition-encrypted: ${{ steps.encrypt-ignition.outputs.ignition-encrypted }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        
      - name: Install Butane
        id: install-butane
        run: |
          BUTANE_VERSION="v0.17.0"
          curl -L https://github.com/coreos/butane/releases/download/${BUTANE_VERSION}/butane-x86_64-unknown-linux-gnu -o butane
          chmod +x butane
          sudo mv butane /usr/local/bin/

      - name: Hydrate config.bu
        id: hydrate-butane
        env:
          TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}
        run: |
          sed -i "s|\${TAILSCALE_AUTHKEY}|${TAILSCALE_AUTHKEY}|g" config.bu
          
      - name: Validate Butane config
        id: validate-butane
        run: butane --strict config.bu > /dev/null

      - name: Convert to Ignition
        id: convert-to-ignition
        run: butane --strict config.bu > config.ign

      - name: Encrypt Ignition
        id: encrypt-ignition
        env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        run: |
          openssl enc -a -in config.ign -pbkdf2 -salt -pass "pass:$ENCRYPTION_KEY" | xargs -I {} printf ignition-encrypted={} >> $GITHUB_OUTPUT 2>/dev/null > /dev/null
    
  build-qcow2-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

      - name: install podman
        run: |
          sudo apt update
          sudo apt install -y podman

      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Pull Image
        id: pull-image
        env:
          INPUT_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        run: |
          sudo podman pull $INPUT_IMAGE

      - name: Create empty disk image
        run: qemu-img create -f qcow2 -o preallocation=metadata coreos-$(uname -m).qcow2 48G

      - name: Install image to disk
        id: bootc-install-to-disk
        env:
          INPUT_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        run: |
          sudo podman run --rm --privileged -v /dev:/dev \
            --pid=host --security-opt label=type:unconfined_t \
            -v /var/lib/containers/var/lib/containers \
            -v $(pwd):/tmp/pwd \
            $INPUT_IMAGE \
            bootc install to-disk \
            --source-imgref=$INPUT_IMAGE \
            --target-imgref=$INPUT_IMAGE \
            --generic-image \
            --filesystem=btrfs \
            --via-loopback \
            /tmp/pwd/coreos-$(uname -m).qcow2
            
        